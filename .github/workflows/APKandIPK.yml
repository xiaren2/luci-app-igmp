name: Build luci-app-igmpproxy Multi-Arch

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-multi-arch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - name: "qualcommax-ipq60xx-snapshot"
            sdk_url: "https://mirror-03.infra.openwrt.org/snapshots/targets/qualcommax/ipq60xx/openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst"
            archive_type: "zstd"
            extract_cmd: "tar -I zstd -xf"
          - name: "mediatek-filogic-23.05.0"
            sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/filogic/openwrt-sdk-23.05.0-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
            archive_type: "xz"
            extract_cmd: "tar -xJf"

    name: Build luci-app-igmpproxy (${{ matrix.target.name }})
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ccache fastjar file g++ gawk gettext git libelf-dev \
            libncurses5-dev libncursesw5-dev libssl-dev python3 python3-pip \
            python3-setuptools rsync unzip wget zlib1g-dev xz-utils zstd

      - name: Download OpenWrt SDK
        run: |
          wget ${{ matrix.target.sdk_url }} -O sdk-archive
          ${{ matrix.target.extract_cmd }} sdk-archive
          SDK_DIR=$(tar -tf sdk-archive | head -1 | cut -f1 -d"/")
          mv "$SDK_DIR" openwrt-sdk

      - name: Prepare package
        run: |
          mkdir -p openwrt-sdk/package/luci-app-igmpproxy
          rsync -av --delete \
            --exclude 'openwrt-sdk' \
            --exclude '.git' \
            --exclude 'bin' \
            --exclude '.github/workflows' \
            --exclude '*.tar.*' \
            ./ openwrt-sdk/package/luci-app-igmpproxy/

      - name: Build package
        working-directory: openwrt-sdk
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make package/luci-app-igmpproxy/compile V=s
          
          # 确保构建目录存在
          mkdir -p $GITHUB_WORKSPACE/packages/${{ matrix.target.name }}
          
          # 复制所有相关文件
          find bin/packages -name "luci-app-igmpproxy*" -o -name "luci-i18n-igmpproxy*" -exec cp {} $GITHUB_WORKSPACE/packages/${{ matrix.target.name}}/ \;
          
          echo "=== 复制的文件 ==="
          ls -la $GITHUB_WORKSPACE/packages/${{ matrix.target.name }}/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.target.name }}
          path: $GITHUB_WORKSPACE/packages/${{ matrix.target.name }}/
          retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    name: Create Release and Upload Packages
    needs: build-multi-arch
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        run: |
          mkdir -p $GITHUB_WORKSPACE/release-packages
          for target in qualcommax-ipq60xx-snapshot mediatek-filogic-23.05.0; do
            gh run download $GITHUB_RUN_ID -n packages-$target -D $GITHUB_WORKSPACE/release-packages/$target
          done
          
          echo "=== 下载的文件 ==="
          find $GITHUB_WORKSPACE/release-packages -type f | xargs ls -la

      - name: Setup Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create version tag
        run: |
          TAG="v$(date +'%Y.%m.%d-%H%M')"
          echo "TAG=$TAG" >> $GITHUB_ENV
          git tag $TAG
          git push origin $TAG

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "luci-app-igmpproxy ${{ env.TAG }}"
          body: |
            Multi-architecture build of luci-app-igmpproxy
            
            **Supported architectures:**
            - qualcommax/ipq60xx (OpenWrt Snapshots)
            - mediatek/filogic (OpenWrt 23.05.0)
            
            **Included packages:**
            - luci-app-igmpproxy
            - luci-i18n-igmpproxy-zh-cn (Chinese language pack)
          files: |
            $GITHUB_WORKSPACE/release-packages/**/*
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
