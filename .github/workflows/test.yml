name: Build luci-app-igmpproxy Multi-Arch1

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-multi-arch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "qualcommax-ipq60xx-snapshot"
            sdk_url: "https://mirror-03.infra.openwrt.org/snapshots/targets/qualcommax/ipq60xx/openwrt-sdk-qualcommax-ipq60xx_gcc-14.3.0_musl.Linux-x86_64.tar.zst"
            extract_cmd: "tar -I zstd -xf"
          - name: "mediatek-filogic-23.05.0"
            sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/filogic/openwrt-sdk-23.05.0-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
            extract_cmd: "tar -xJf"

    name: Build luci-app-igmpproxy (${{ matrix.name }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ccache fastjar file g++ gawk gettext git libelf-dev \
            libncurses5-dev libncursesw5-dev libssl-dev python3 python3-pip \
            python3-setuptools rsync unzip wget zlib1g-dev xz-utils zstd

      - name: Download OpenWrt SDK
        run: |
          wget ${{ matrix.sdk_url }} -O sdk-archive
          ${{ matrix.extract_cmd }} sdk-archive
          SDK_DIR=$(tar -tf sdk-archive | head -1 | cut -f1 -d"/")
          mv "$SDK_DIR" openwrt-sdk

      - name: Prepare package
        run: |
          mkdir -p openwrt-sdk/package/luci-app-igmpproxy
          rsync -av --delete \
            --exclude 'openwrt-sdk' \
            --exclude '.git' \
            --exclude 'bin' \
            --exclude '.github/workflows' \
            --exclude '*.tar.*' \
            --exclude 'sdk-archive' \
            ./ openwrt-sdk/package/luci-app-igmpproxy/

      - name: Build package
        working-directory: openwrt-sdk
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          make package/luci-app-igmpproxy/compile V=s
          echo "=== 编译生成的文件 ==="
          find bin/packages -type f \( -name "*.ipk" -o -name "*.apk" \) || true

      - name: Copy packages to staging
        shell: bash
        run: |
          shopt -s globstar
          mkdir -p packages-staging/${{ matrix.name }}

          # DEBUG: 列出所有可能的 igmpproxy 生成文件
          echo "=== SDK 里可能的 igmpproxy 文件列表 ==="
          find openwrt-sdk -type f -path '*/bin/packages/*' \( -iname '*igmpproxy*.ipk' -o -iname '*igmpproxy*.apk' -o -iname 'luci-i18n-igmpproxy*.ipk' \) -print || true

          # 只复制 igmpproxy / luci-i18n-igmpproxy 文件
          find openwrt-sdk -type f -path '*/bin/packages/*' \
            \( -iname '*igmpproxy*.ipk' -o -iname '*igmpproxy*.apk' -o -iname 'luci-i18n-igmpproxy*.ipk' \) \
            -exec cp -v {} packages-staging/${{ matrix.name }}/ \;

          echo "=== 暂存区文件 ==="
          ls -la packages-staging/${{ matrix.name }}/ || echo "⚠️ 无文件"

      - name: Upload packages to staging
        uses: actions/upload-artifact@v4
        with:
          name: packages-staging-${{ matrix.name }}
          path: packages-staging/${{ matrix.name }}/
          retention-days: 3
          if-no-files-found: warn

  create-release:
    runs-on: ubuntu-latest
    needs: build-multi-arch
    name: Create Release and Upload Packages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all packages
        uses: actions/download-artifact@v4
        with:
          pattern: packages-staging-*
          path: downloaded-packages
          merge-multiple: true

      - name: Verify package files
        run: |
          found=$(find downloaded-packages -type f \( -name "*igmpproxy*.ipk" -o -name "*igmpproxy*.apk" -o -name "luci-i18n-igmpproxy*.ipk" \) | wc -l)
          if [ "$found" -eq 0 ]; then
            echo "未找到任何 igmpproxy 包，停止发布。"
            exit 1
          fi
          echo "Found $found package(s) to release."

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "luci-app-igmpproxy Build v${{ github.run_number }}"
          body: |
            Multi-architecture build of luci-app-igmpproxy
            
            **支持的架构:**
            - qualcommax/ipq60xx (OpenWrt Snapshots)
            - mediatek/filogic (OpenWrt 23.05.0)
            
            **包含的文件:**
            - luci-app-igmpproxy (主程序)
            - luci-i18n-igmpproxy-zh-cn (中文语言包)
            
            **构建时间:** ${{ github.workflow_run.created_at }}
          files: |
            downloaded-packages/**/*.ipk
            downloaded-packages/**/*.apk
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
